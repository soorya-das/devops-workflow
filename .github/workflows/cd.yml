# .github/workflows/reusable-publish.yml
name: Reusable Maven Publish

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        default: '17'
        type: string
      image-name:
        required: true
        type: string
      chart-name:
        required: true
        type: string
      service-name:
        required: true
        type: string
      namespace:
        required: true
        type: string

    secrets:
      MAVEN_USERNAME:
        required: true
      MAVEN_PASSWORD:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      KUBECONFIG_CONTENT:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java ${{ inputs.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      - name: Make Maven Wrapper Executable
        run: chmod +x mvnw

      - name: Set Project Version from version.properties
        run: |
          VERSION=$(grep build.version version.properties | cut -d'=' -f2)
          echo "Using build version: $VERSION"
          ./mvnw versions:set -DnewVersion=$VERSION

      - name: Publish to GitHub Packages
        env:
          GITHUB_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.MAVEN_PASSWORD }}
        run: |
          ./mvnw --batch-mode deploy

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker image
        run: |
          echo "<settings><servers><server><id>github</id><username>${{ secrets.GITHUB_USERNAME }}</username><password>${{ secrets.GITHUB_TOKEN }}</password></server></servers></settings>" > settings.xml
          docker build --build-arg GITHUB_USERNAME=${{ secrets.GITHUB_USERNAME }} \
                 --build-arg GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
                 --build-arg WORK_DIR=. \
                 -t ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image-name }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image-name }}:latest

      - name: Set up Kubeconfig (Local)
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Deploy with Helm
        run: |
          helm upgrade --install ${{ inputs.service-name }} ./helm/${{ inputs.chart-name }} \
          --namespace ${{ inputs.namespace }} --create-namespace \
          --set image.repository=${{ secrets.DOCKER_USERNAME }}/${{ inputs.image-name }} \
          --set image.tag=latest
      
          
      


      
        
